name: CI

on: [pull_request]

jobs:
  markdown:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: avto-dev/markdown-lint@v1
      with:
        config: '.github/lint/markdown.json'
        args: 'docs/**/*.md'
  changedfiles:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      all: ${{ steps.changes.outputs.all}}
      markdown: ${{ steps.changes.outputs.markdown }}
    steps:
      # Make sure we have some code to diff.
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changes
        # Set outputs using the command.
        run: |
          echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | xargs)"
          echo "::set-output name=markdown::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep .md$ | xargs)"
  changelog:
    runs-on: ubuntu-latest
    # require the first job to have ran
    needs: changedfiles
    steps:
      - name: echo changed files
        run: |
          if [[ ! "${{needs.changedfiles.outputs.markdown}}" == *"CHANGELOG.md"* ]]; then
            echo "::error file=CHANGELOG.md,line=1,col=1::Please make sure that you add a docs/CHANGELOG.md entry to describe the changes in this pull request."
            exit 1
          fi
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.2
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: gems-build-rails-main-ruby-2.7.2-${{ hashFiles('**/Gemfile.lock') }}
    - name: Lint with Rubocop
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
        bundle exec rubocop
  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rails_version: [5.2.5, 6.0.3.6, 6.1.3.1, main]
        ruby_version: [2.5.8, 2.6.6, 2.7.2, 3.0.0]
        exclude:
          - rails_version: 5.2.5
            ruby_version: 3.0.0
          - rails_version: 6.0.3.6
            ruby_version: 3.0.0
          - rails_version: main
            ruby_version: 2.5.8
          - rails_version: main
            ruby_version: 2.6.6
    steps:
    - uses: actions/checkout@master
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby_version }}
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: gems-build-rails-${{ matrix.rails_version }}-ruby-${{ matrix.ruby_version }}-${{ hashFiles('**/Gemfile.lock') }}
    - name: Build and test with Rake
      run: |
        bundle config path vendor/bundle
        bundle update
        bundle exec rake
      env:
        MEASURE_COVERAGE: true
        RAILS_VERSION: ${{ matrix.rails_version }}
    - name: Upload coverage results
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: simplecov-resultset-rails${{matrix.rails_version}}-ruby${{matrix.ruby_version}}
        path: coverage
  pvc:
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        repository: 'primer/view_components'
        path: 'primer_view_components'
    - uses: actions/checkout@master
      with:
        path: 'view_component'
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - uses: actions/cache@v2
      with:
        path: |
          node_modules
          vendor/bundle
        key: gems-build-pvc-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/yarn.lock') }}
    - name: Build and test with Rake
      run: |
        cd primer_view_components
        yarn install
        bundle config path vendor/bundle
        bundle update
        bundle exec rake docs:preview
        bundle exec rake
      env:
        VIEW_COMPONENT_PATH: ../view_component
  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.2
    - name: Download coverage results
      uses: actions/download-artifact@v2
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: gems-build-rails-main-ruby-2.7.2-${{ hashFiles('**/Gemfile.lock') }}
    - name: Collate simplecov
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
        bundle exec rake coverage:report
