name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3
    - uses: actions/cache@v4
      with:
        path: vendor/bundle
        key: gems-build-rails-main-ruby-3.3-${{ hashFiles('**/Gemfile.lock') }}
    - name: Run benchmarks
      run: |
        bundle config path vendor/bundle
        bundle update
        bundle exec rake partial_benchmark
        bundle exec rake translatable_benchmark
  test:
    name: test (${{ matrix.rails_version }}, ${{ matrix.ruby_version }}, ${{ matrix.mode }}, yjit-${{matrix.yjit_mode}})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - ruby_version: "3.0"
            rails_version: "6.1"
            mode: "capture_patch_enabled"
            yjit_mode: '0'
          - ruby_version: "3.0"
            rails_version: "6.1"
            mode: "capture_patch_disabled"
            yjit_mode: '0'
          - ruby_version: "3.1"
            rails_version: "7.0"
            mode: "capture_patch_enabled"
            yjit_mode: '1'
          - ruby_version: "3.1"
            rails_version: "7.0"
            mode: "capture_patch_disabled"
            yjit_mode: '0'
          - ruby_version: "3.2"
            rails_version: "7.1"
            mode: "capture_patch_enabled"
            yjit_mode: '0'
          - ruby_version: "3.2"
            rails_version: "7.1"
            mode: "capture_patch_disabled"
            yjit_mode: '1'
          - ruby_version: "3.3"
            rails_version: "7.1"
            mode: "capture_patch_enabled"
            yjit_mode: '1'
          - ruby_version: "3.3"
            rails_version: "7.1"
            mode: "capture_patch_disabled"
            yjit_mode: '1'
          - ruby_version: "head"
            rails_version: "main"
            mode: "capture_patch_disabled"
            yjit_mode: '1'
          - ruby_version: "head"
            rails_version: "main"
            mode: "capture_patch_enabled"
            yjit_mode: '1'
    env:
      BUNDLE_GEMFILE: gemfiles/rails_${{ matrix.rails_version }}.gemfile
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby_version }}
        bundler-cache: true
    - name: Build and test with Rake
      # Code-reloading isn't compatible with simplecov, so we need to run once
      # to collect coverage, and again to test reloads.
      run: |
        bundle exec appraisal rails-${{ matrix.rails_version }} bundle
        MEASURE_COVERAGE=true bundle exec appraisal rails-${{ matrix.rails_version }} rake
        ENABLE_RELOADING=true bundle exec appraisal rails-${{ matrix.rails_version }} rake
      env:
        RAISE_ON_WARNING: 1
        RAILS_VERSION: ${{ matrix.rails_version }}
        CAPTURE_PATCH_ENABLED: ${{ matrix.mode == 'capture_patch_enabled' && 'true' || 'false' }}
        RUBY_YJIT_ENABLE: ${{matrix.yjit_mode}}
    - name: Upload coverage results
      uses: actions/upload-artifact@v3.1.3
      if: always()
      with:
        name: simplecov-resultset-rails${{matrix.rails_version}}-ruby${{matrix.ruby_version}}-${{matrix.mode}}
        path: coverage
  primer_view_components_compatibility:
    name: Test compatibility with Primer ViewComponents (main)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.1.1
      with:
        repository: 'primer/view_components'
        path: 'primer_view_components'
    - uses: actions/checkout@v4.1.1
      with:
        path: 'view_component'
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2
    - uses: actions/setup-node@v4
      with:
        node-version: 16
    - uses: actions/cache@v4
      with:
        path: |
          node_modules
          vendor/bundle
        key: gems-build-pvc-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/package-json.lock') }}
    - name: Build and test with Rake
      run: |
        cd primer_view_components
        npm ci
        cd demo && npm ci && cd ..
        bundle config path vendor/bundle
        bundle install
        bundle exec rake
      env:
        VIEW_COMPONENT_PATH: ../view_component
        RAILS_VERSION: '7.1.1'
        PARALLEL_WORKERS: '1'
  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3
    - name: Download coverage results
      uses: actions/download-artifact@v3
    - uses: actions/cache@v4
      with:
        path: vendor/bundle
        key: gems-build-rails-main-ruby-3.3-${{ hashFiles('**/Gemfile.lock') }}
    - name: Collate simplecov
      run: |
        bundle config path vendor/bundle
        bundle update
        bundle exec rake coverage:report
      env:
        RAILS_VERSION: '~> 7.1.0'
